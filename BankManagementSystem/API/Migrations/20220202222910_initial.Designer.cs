// <auto-generated />
using System;
using API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(BankManagmentSystemContext))]
    [Migration("20220202222910_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API.Database.Citizenship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Citizenships");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Республика Беларусь"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Другое"
                        });
                });

            modelBuilder.Entity("API.Database.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Минск"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Гомель"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Витебск"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Могилёв"
                        },
                        new
                        {
                            Id = -5,
                            Name = "Гродно"
                        },
                        new
                        {
                            Id = -6,
                            Name = "Брест"
                        },
                        new
                        {
                            Id = -7,
                            Name = "Бобруйск"
                        },
                        new
                        {
                            Id = -8,
                            Name = "Барановичи"
                        },
                        new
                        {
                            Id = -9,
                            Name = "Борисов"
                        },
                        new
                        {
                            Id = -10,
                            Name = "Пинск"
                        },
                        new
                        {
                            Id = -11,
                            Name = "Орша"
                        },
                        new
                        {
                            Id = -12,
                            Name = "Мозырь"
                        },
                        new
                        {
                            Id = -13,
                            Name = "Лида"
                        },
                        new
                        {
                            Id = -14,
                            Name = "Солигорск "
                        },
                        new
                        {
                            Id = -15,
                            Name = "Новополоцк"
                        });
                });

            modelBuilder.Entity("API.Database.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("CitizenshipId")
                        .HasColumnType("int");

                    b.Property<int>("DisabilityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FamilyStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRetired")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MounthlyIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PassportIdNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("PassportIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportIssuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("PassportSeries")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PhoneNumberMobile")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumberStationary")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("RegistrationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationCityId")
                        .HasColumnType("int");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidenceCityId")
                        .HasColumnType("int");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CitizenshipId");

                    b.HasIndex("DisabilityId");

                    b.HasIndex("FamilyStatusId");

                    b.HasIndex("PassportIdNumber")
                        .IsUnique();

                    b.HasIndex("RegistrationCityId");

                    b.HasIndex("ResidenceCityId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("API.Database.Disability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Disabilities");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Нет"
                        },
                        new
                        {
                            Id = -2,
                            Name = "I степень"
                        },
                        new
                        {
                            Id = -3,
                            Name = "II степень"
                        },
                        new
                        {
                            Id = -4,
                            Name = "III степень"
                        },
                        new
                        {
                            Id = -5,
                            Name = "IV степень"
                        });
                });

            modelBuilder.Entity("API.Database.FamilyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FamilyStatuses");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "холост (не замужем)"
                        },
                        new
                        {
                            Id = -2,
                            Name = "женат (замужем)"
                        },
                        new
                        {
                            Id = -3,
                            Name = "разведен (разве­дена)"
                        },
                        new
                        {
                            Id = -4,
                            Name = "вдовец (вдова)"
                        });
                });

            modelBuilder.Entity("API.Database.Client", b =>
                {
                    b.HasOne("API.Database.Citizenship", "Citizenship")
                        .WithMany()
                        .HasForeignKey("CitizenshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Database.Disability", "Disability")
                        .WithMany()
                        .HasForeignKey("DisabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Database.FamilyStatus", "FamilyStatus")
                        .WithMany()
                        .HasForeignKey("FamilyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Database.City", "RegistrationCity")
                        .WithMany()
                        .HasForeignKey("RegistrationCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API.Database.City", "ResidenceCity")
                        .WithMany()
                        .HasForeignKey("ResidenceCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Citizenship");

                    b.Navigation("Disability");

                    b.Navigation("FamilyStatus");

                    b.Navigation("RegistrationCity");

                    b.Navigation("ResidenceCity");
                });
#pragma warning restore 612, 618
        }
    }
}
